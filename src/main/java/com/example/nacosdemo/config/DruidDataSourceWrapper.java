//package com.example.nacosdemo.config;//////import com.alibaba.druid.pool.DruidDataSource;//import org.springframework.beans.factory.InitializingBean;//import org.springframework.beans.factory.annotation.Value;//import org.springframework.cloud.context.config.annotation.RefreshScope;//import org.springframework.context.annotation.Configuration;/////**// * @author yhli// *///@Configuration//@RefreshScope//public class DruidDataSourceWrapper extends DruidDataSource implements InitializingBean {////    @Value("${spring.datasource.druid.url}")//    private String url;//    @Value("${spring.datasource.druid.username}")//    private String username;//    @Value("${spring.datasource.druid.password}")//    private String password;//    @Value("${spring.datasource.driverClassName}")//    private String driverClassName;////    private String passwordCallbackClassName;//////    public void setTimeBetweenEvictionRunsMillis(long timeBetweenEvictionRunsMillis) {//        this.timeBetweenEvictionRunsMillis = timeBetweenEvictionRunsMillis;//    }////    public void setMinEvictableIdleTimeMillis(long minEvictableIdleTimeMillis) {//        this.minEvictableIdleTimeMillis = minEvictableIdleTimeMillis;//    }////    @Override//    public void setUrl(String url) {//        this.url = url;//    }////    @Override//    public void setPasswordCallbackClassName(String passwordCallbackClassName) {//        this.passwordCallbackClassName = passwordCallbackClassName;//    }////    @Override//    public void setDriverClassName(String driverClassName) {//        this.driverClassName = driverClassName;//    }////    @Override//    public void afterPropertiesSet() throws Exception {//        // 如果未找到前缀“spring.datasource.druid”JDBC属性，将使用“Spring.DataSource”前缀JDBC属性。//        super.setUrl(url);//        super.setUsername(username);//        super.setPassword(password);//        super.setDriverClassName(driverClassName);//        super.setInitialSize(initialSize);//        super.setMinIdle(minIdle);//        super.setMaxActive(maxActive);//        super.setMaxWait(maxWait);//        super.setTimeBetweenEvictionRunsMillis(timeBetweenEvictionRunsMillis);//        super.setMinEvictableIdleTimeMillis(minEvictableIdleTimeMillis);//        super.setValidationQuery(validationQuery);//        super.setTestWhileIdle(testWhileIdle);//        super.setTestOnBorrow(testOnBorrow);//        super.setTestOnReturn(testOnReturn);//        super.setPoolPreparedStatements(poolPreparedStatements);//        super.setMaxPoolPreparedStatementPerConnectionSize(maxPoolPreparedStatementPerConnectionSize);//        super.setPasswordCallbackClassName(passwordCallbackClassName);//    }//}